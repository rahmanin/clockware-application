// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render Loader when loading = true 1`] = `
"<Provider store={{...}}>
  <BlogEditor>
    <div className=\\"editor_wrapper\\">
      <div className=\\"editor\\">
        <h2 className=\\"editor_status_panel\\">
          Creating news
        </h2>
        <Editor apiKey=\\"4kr2n75n8tj8jlr00liqzo3dloo56umwwruma6bzutqs5ww8\\" init={{...}} value=\\"\\" onEditorChange={[Function: onEditorChange]} cloudChannel=\\"5\\">
          <textarea style={{...}} name={[undefined]} id=\\"tiny-react_82799240721607946813858\\" />
        </Editor>
      </div>
      <Space className=\\"editor_buttons\\">
        <div className=\\"ant-space ant-space-horizontal ant-space-align-center editor_buttons\\" style={{...}}>
          <Item className=\\"ant-space-item\\" direction=\\"horizontal\\" index={0} marginDirection=\\"marginRight\\" split={[undefined]} wrap={false}>
            <div className=\\"ant-space-item\\" style={{...}}>
              <Button onClick={[Function: onClick]} type=\\"primary\\" loading={false} ghost={false} block={false} htmlType=\\"button\\">
                <Wave>
                  <button onClick={[Function: handleClick]} type=\\"button\\" className=\\"ant-btn ant-btn-primary\\">
                    <LoadingIcon existIcon={false} prefixCls=\\"ant-btn\\" loading={false}>
                      <CSSMotion visible={false} motionName=\\"ant-btn-loading-icon-motion\\" removeOnLeave={true} onAppearStart={[Function: getCollapsedWidth]} onAppearActive={[Function: getRealWidth]} onEnterStart={[Function: getCollapsedWidth]} onEnterActive={[Function: getRealWidth]} onLeaveStart={[Function: getRealWidth]} onLeaveActive={[Function: getCollapsedWidth]}>
                        <DomWrapper />
                      </CSSMotion>
                    </LoadingIcon>
                    <span>
                      Save as
                    </span>
                  </button>
                </Wave>
              </Button>
            </div>
          </Item>
          <Item className=\\"ant-space-item\\" direction=\\"horizontal\\" index={1} marginDirection=\\"marginRight\\" split={[undefined]} wrap={false}>
            <div className=\\"ant-space-item\\" style={{...}}>
              <Button onClick={[Function: onClick]} type=\\"dashed\\" disabled={true} loading={false} ghost={false} block={false} htmlType=\\"button\\">
                <Wave>
                  <button onClick={[Function: handleClick]} disabled={true} type=\\"button\\" className=\\"ant-btn ant-btn-dashed\\">
                    <LoadingIcon existIcon={false} prefixCls=\\"ant-btn\\" loading={false}>
                      <CSSMotion visible={false} motionName=\\"ant-btn-loading-icon-motion\\" removeOnLeave={true} onAppearStart={[Function: getCollapsedWidth]} onAppearActive={[Function: getRealWidth]} onEnterStart={[Function: getCollapsedWidth]} onEnterActive={[Function: getRealWidth]} onLeaveStart={[Function: getRealWidth]} onLeaveActive={[Function: getCollapsedWidth]}>
                        <DomWrapper />
                      </CSSMotion>
                    </LoadingIcon>
                    <span>
                      Update news
                    </span>
                  </button>
                </Wave>
              </Button>
            </div>
          </Item>
          <Item className=\\"ant-space-item\\" direction=\\"horizontal\\" index={2} marginDirection=\\"marginRight\\" split={[undefined]} wrap={false}>
            <div className=\\"ant-space-item\\" style={{...}}>
              <Button onClick={[Function: onClick]} type=\\"dashed\\" loading={false} ghost={false} block={false} htmlType=\\"button\\">
                <Wave>
                  <button onClick={[Function: handleClick]} type=\\"button\\" className=\\"ant-btn ant-btn-dashed\\">
                    <LoadingIcon existIcon={false} prefixCls=\\"ant-btn\\" loading={false}>
                      <CSSMotion visible={false} motionName=\\"ant-btn-loading-icon-motion\\" removeOnLeave={true} onAppearStart={[Function: getCollapsedWidth]} onAppearActive={[Function: getRealWidth]} onEnterStart={[Function: getCollapsedWidth]} onEnterActive={[Function: getRealWidth]} onLeaveStart={[Function: getRealWidth]} onLeaveActive={[Function: getCollapsedWidth]}>
                        <DomWrapper />
                      </CSSMotion>
                    </LoadingIcon>
                    <span>
                      Open news list
                    </span>
                  </button>
                </Wave>
              </Button>
            </div>
          </Item>
        </div>
      </Space>
      <Modal title=\\"Save news\\" closable={true} onCancel={[Function: handleCancel]} visible={false} footer={false} width={520} transitionName=\\"zoom\\" maskTransitionName=\\"fade\\" confirmLoading={false} okType=\\"primary\\">
        <Dialog title=\\"Save news\\" closable={true} onCancel={[Function: handleCancel]} width={520} transitionName=\\"zoom\\" maskTransitionName=\\"fade\\" confirmLoading={false} okType=\\"primary\\" getContainer={[undefined]} prefixCls=\\"ant-modal\\" wrapClassName=\\"\\" footer={false} visible={false} mousePosition={[undefined]} onClose={[Function: handleCancel]} closeIcon={{...}} focusTriggerAfterClose={true}>
          <PortalWrapper visible={false} forceRender={[undefined]} getContainer={[undefined]} />
        </Dialog>
      </Modal>
      <Modal className=\\"edit_news_modal\\" title=\\"Edit news\\" closable={true} onCancel={[Function: handleCancel]} visible={false} footer={false} width={520} transitionName=\\"zoom\\" maskTransitionName=\\"fade\\" confirmLoading={false} okType=\\"primary\\">
        <Dialog className=\\"edit_news_modal\\" title=\\"Edit news\\" closable={true} onCancel={[Function: handleCancel]} width={520} transitionName=\\"zoom\\" maskTransitionName=\\"fade\\" confirmLoading={false} okType=\\"primary\\" getContainer={[undefined]} prefixCls=\\"ant-modal\\" wrapClassName=\\"\\" footer={false} visible={false} mousePosition={[undefined]} onClose={[Function: handleCancel]} closeIcon={{...}} focusTriggerAfterClose={true}>
          <PortalWrapper visible={false} forceRender={[undefined]} getContainer={[undefined]} />
        </Dialog>
      </Modal>
    </div>
  </BlogEditor>
</Provider>"
`;

exports[`Should render whole component 1`] = `
"<Provider store={{...}}>
  <BlogEditor>
    <div className=\\"editor_wrapper\\">
      <div className=\\"editor\\">
        <h2 className=\\"editor_status_panel\\">
          Creating news
        </h2>
        <Editor apiKey=\\"4kr2n75n8tj8jlr00liqzo3dloo56umwwruma6bzutqs5ww8\\" init={{...}} value=\\"\\" onEditorChange={[Function: onEditorChange]} cloudChannel=\\"5\\">
          <textarea style={{...}} name={[undefined]} id=\\"tiny-react_9500537931607946813910\\" />
        </Editor>
      </div>
      <Space className=\\"editor_buttons\\">
        <div className=\\"ant-space ant-space-horizontal ant-space-align-center editor_buttons\\" style={{...}}>
          <Item className=\\"ant-space-item\\" direction=\\"horizontal\\" index={0} marginDirection=\\"marginRight\\" split={[undefined]} wrap={false}>
            <div className=\\"ant-space-item\\" style={{...}}>
              <Button onClick={[Function: onClick]} type=\\"primary\\" loading={false} ghost={false} block={false} htmlType=\\"button\\">
                <Wave>
                  <button onClick={[Function: handleClick]} type=\\"button\\" className=\\"ant-btn ant-btn-primary\\">
                    <LoadingIcon existIcon={false} prefixCls=\\"ant-btn\\" loading={false}>
                      <CSSMotion visible={false} motionName=\\"ant-btn-loading-icon-motion\\" removeOnLeave={true} onAppearStart={[Function: getCollapsedWidth]} onAppearActive={[Function: getRealWidth]} onEnterStart={[Function: getCollapsedWidth]} onEnterActive={[Function: getRealWidth]} onLeaveStart={[Function: getRealWidth]} onLeaveActive={[Function: getCollapsedWidth]}>
                        <DomWrapper />
                      </CSSMotion>
                    </LoadingIcon>
                    <span>
                      Save as
                    </span>
                  </button>
                </Wave>
              </Button>
            </div>
          </Item>
          <Item className=\\"ant-space-item\\" direction=\\"horizontal\\" index={1} marginDirection=\\"marginRight\\" split={[undefined]} wrap={false}>
            <div className=\\"ant-space-item\\" style={{...}}>
              <Button onClick={[Function: onClick]} type=\\"dashed\\" disabled={true} loading={false} ghost={false} block={false} htmlType=\\"button\\">
                <Wave>
                  <button onClick={[Function: handleClick]} disabled={true} type=\\"button\\" className=\\"ant-btn ant-btn-dashed\\">
                    <LoadingIcon existIcon={false} prefixCls=\\"ant-btn\\" loading={false}>
                      <CSSMotion visible={false} motionName=\\"ant-btn-loading-icon-motion\\" removeOnLeave={true} onAppearStart={[Function: getCollapsedWidth]} onAppearActive={[Function: getRealWidth]} onEnterStart={[Function: getCollapsedWidth]} onEnterActive={[Function: getRealWidth]} onLeaveStart={[Function: getRealWidth]} onLeaveActive={[Function: getCollapsedWidth]}>
                        <DomWrapper />
                      </CSSMotion>
                    </LoadingIcon>
                    <span>
                      Update news
                    </span>
                  </button>
                </Wave>
              </Button>
            </div>
          </Item>
          <Item className=\\"ant-space-item\\" direction=\\"horizontal\\" index={2} marginDirection=\\"marginRight\\" split={[undefined]} wrap={false}>
            <div className=\\"ant-space-item\\" style={{...}}>
              <Button onClick={[Function: onClick]} type=\\"dashed\\" loading={false} ghost={false} block={false} htmlType=\\"button\\">
                <Wave>
                  <button onClick={[Function: handleClick]} type=\\"button\\" className=\\"ant-btn ant-btn-dashed\\">
                    <LoadingIcon existIcon={false} prefixCls=\\"ant-btn\\" loading={false}>
                      <CSSMotion visible={false} motionName=\\"ant-btn-loading-icon-motion\\" removeOnLeave={true} onAppearStart={[Function: getCollapsedWidth]} onAppearActive={[Function: getRealWidth]} onEnterStart={[Function: getCollapsedWidth]} onEnterActive={[Function: getRealWidth]} onLeaveStart={[Function: getRealWidth]} onLeaveActive={[Function: getCollapsedWidth]}>
                        <DomWrapper />
                      </CSSMotion>
                    </LoadingIcon>
                    <span>
                      Open news list
                    </span>
                  </button>
                </Wave>
              </Button>
            </div>
          </Item>
        </div>
      </Space>
      <Modal title=\\"Save news\\" closable={true} onCancel={[Function: handleCancel]} visible={false} footer={false} width={520} transitionName=\\"zoom\\" maskTransitionName=\\"fade\\" confirmLoading={false} okType=\\"primary\\">
        <Dialog title=\\"Save news\\" closable={true} onCancel={[Function: handleCancel]} width={520} transitionName=\\"zoom\\" maskTransitionName=\\"fade\\" confirmLoading={false} okType=\\"primary\\" getContainer={[undefined]} prefixCls=\\"ant-modal\\" wrapClassName=\\"\\" footer={false} visible={false} mousePosition={[undefined]} onClose={[Function: handleCancel]} closeIcon={{...}} focusTriggerAfterClose={true}>
          <PortalWrapper visible={false} forceRender={[undefined]} getContainer={[undefined]} />
        </Dialog>
      </Modal>
      <Modal className=\\"edit_news_modal\\" title=\\"Edit news\\" closable={true} onCancel={[Function: handleCancel]} visible={false} footer={false} width={520} transitionName=\\"zoom\\" maskTransitionName=\\"fade\\" confirmLoading={false} okType=\\"primary\\">
        <Dialog className=\\"edit_news_modal\\" title=\\"Edit news\\" closable={true} onCancel={[Function: handleCancel]} width={520} transitionName=\\"zoom\\" maskTransitionName=\\"fade\\" confirmLoading={false} okType=\\"primary\\" getContainer={[undefined]} prefixCls=\\"ant-modal\\" wrapClassName=\\"\\" footer={false} visible={false} mousePosition={[undefined]} onClose={[Function: handleCancel]} closeIcon={{...}} focusTriggerAfterClose={true}>
          <PortalWrapper visible={false} forceRender={[undefined]} getContainer={[undefined]} />
        </Dialog>
      </Modal>
    </div>
  </BlogEditor>
</Provider>"
`;
